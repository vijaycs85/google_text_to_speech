<?php
/**
 * @author Karthikeyan Manivasagam
 * @author Karthikeyan Manivasagam <karthikeyanm.inbox@gmail.com>
 * @file
 * Contains \Drupal\google_text_to_speech\Service\BaseService.
 */
namespace Drupal\google_text_to_speech\Service;

use Google\Cloud\TextToSpeech\V1\AudioConfig;
use Google\Cloud\TextToSpeech\V1\AudioEncoding;
use Google\Cloud\TextToSpeech\V1\SynthesisInput;
use Google\Cloud\TextToSpeech\V1\TextToSpeechClient;
use Google\Cloud\TextToSpeech\V1\VoiceSelectionParams;
use Google\Cloud\TextToSpeech\V1\SsmlVoiceGender;
use \Drupal\Core\Config\ConfigFactoryInterface;

/**
 * Contains the TextToSpeech.
 */
class TextToSpeech  {
	
    public $config;
    protected $client;

/**
 * Creates a config of google_text_to_speech.settings.
 *
 * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
 *   The config factory.
 */
public function __construct(ConfigFactoryInterface $config_factory) {
  $this->config = $config_factory->get('google_text_to_speech.settings');
  $this->client = new TextToSpeechClient(['credentials' => $this->config->get('google_text_to_speech_json_path')]);

}

 public function getAudio($parameters) {
    $ptext = isset($parameters['text']) && trim($parameters['text']) != "" ? $parameters['text'] : 'Sample Audio has been generated by google text to speech';
    $planguage = isset($parameters['language_code']) ? $parameters['language_code'] : 'en-US';
    $pvoice = isset($parameters['voice']) ? $parameters['voice'] : 1;
    $pencoding = isset($parameters['encoding']) ? $parameters['encoding'] : 2;

    $input = new SynthesisInput();
    $input->setText($ptext);
    $voice = new VoiceSelectionParams();
    $voice->setLanguageCode($planguage);
    $voice->setSsmlGender($pvoice);
    $audioConfig = new AudioConfig();
    $audioConfig->setAudioEncoding($pencoding);
    $resp = $this->client->synthesizeSpeech($input, $voice, $audioConfig);
    $file =  $resp->getAudioContent();
    return $file;
 }

 public function downloadAudio($parameters = []) {
    $parameters['encoding'] = isset($parameters['encoding']) ? $parameters['encoding'] : 2;
    $audio = $this->getAudio($parameters);
    $file_size = strlen($audio);
    header('Content-Description: File Transfer');
    header('Content-Type: audio/mpeg');
    $encoding = [1 => 'mp3', 3 => 'wav', 2 => 'mp3'];
    header('Content-Disposition: attachment; filename="test.'.$encoding[$parameters['encoding']].'"');
    header('Expires: 0');
    header('Cache-Control: must-revalidate');
    header('Pragma: public');
    header('Content-Length: ' . $file_size);
    flush();
    echo($audio);
 }
}